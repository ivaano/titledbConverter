// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using titledbConverter.Data;

#nullable disable

namespace titledbConverter.Migrations
{
    [DbContext(typeof(SqliteDbContext))]
    partial class SqliteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("titledbConverter.Models.Cnmt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("OtherApplicationId")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR");

                    b.Property<int?>("RequiredApplicationVersion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TitleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TitleType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TitleId");

                    b.ToTable("Cnmts");
                });

            modelBuilder.Entity("titledbConverter.Models.Title", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApplicationId")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR");

                    b.Property<long>("NsuId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TitleName")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.ToTable("Titles");
                });

            modelBuilder.Entity("titledbConverter.Models.Version", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("TitleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("VersionDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("VersionNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TitleId");

                    b.ToTable("Versions");
                });

            modelBuilder.Entity("titledbConverter.Models.Cnmt", b =>
                {
                    b.HasOne("titledbConverter.Models.Title", "Title")
                        .WithMany("Cnmts")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Title");
                });

            modelBuilder.Entity("titledbConverter.Models.Version", b =>
                {
                    b.HasOne("titledbConverter.Models.Title", "Title")
                        .WithMany("Versions")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Title");
                });

            modelBuilder.Entity("titledbConverter.Models.Title", b =>
                {
                    b.Navigation("Cnmts");

                    b.Navigation("Versions");
                });
#pragma warning restore 612, 618
        }
    }
}
