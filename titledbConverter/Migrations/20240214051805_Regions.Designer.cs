// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using titledbConverter.Data;

#nullable disable

namespace titledbConverter.Migrations
{
    [DbContext(typeof(SqliteDbContext))]
    [Migration("20240214051805_Regions")]
    partial class Regions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("RegionTitle", b =>
                {
                    b.Property<int>("RegionsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TitlesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RegionsId", "TitlesId");

                    b.HasIndex("TitlesId");

                    b.ToTable("RegionTitle");
                });

            modelBuilder.Entity("titledbConverter.Models.Cnmt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("OtherApplicationId")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR");

                    b.Property<int?>("RequiredApplicationVersion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TitleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TitleType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TitleId");

                    b.ToTable("Cnmts");
                });

            modelBuilder.Entity("titledbConverter.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "AR"
                        },
                        new
                        {
                            Id = 2,
                            Name = "AT"
                        },
                        new
                        {
                            Id = 3,
                            Name = "BE"
                        },
                        new
                        {
                            Id = 4,
                            Name = "BG"
                        },
                        new
                        {
                            Id = 5,
                            Name = "BR"
                        },
                        new
                        {
                            Id = 6,
                            Name = "CH"
                        },
                        new
                        {
                            Id = 7,
                            Name = "CL"
                        },
                        new
                        {
                            Id = 8,
                            Name = "CN"
                        },
                        new
                        {
                            Id = 9,
                            Name = "CO"
                        },
                        new
                        {
                            Id = 10,
                            Name = "CY"
                        },
                        new
                        {
                            Id = 11,
                            Name = "CZ"
                        },
                        new
                        {
                            Id = 12,
                            Name = "DK"
                        },
                        new
                        {
                            Id = 13,
                            Name = "EE"
                        },
                        new
                        {
                            Id = 14,
                            Name = "ES"
                        },
                        new
                        {
                            Id = 15,
                            Name = "FI"
                        },
                        new
                        {
                            Id = 16,
                            Name = "GR"
                        },
                        new
                        {
                            Id = 17,
                            Name = "HK"
                        },
                        new
                        {
                            Id = 18,
                            Name = "HR"
                        },
                        new
                        {
                            Id = 19,
                            Name = "HU"
                        },
                        new
                        {
                            Id = 20,
                            Name = "IE"
                        },
                        new
                        {
                            Id = 21,
                            Name = "KR"
                        },
                        new
                        {
                            Id = 22,
                            Name = "LT"
                        },
                        new
                        {
                            Id = 23,
                            Name = "LU"
                        },
                        new
                        {
                            Id = 24,
                            Name = "LV"
                        },
                        new
                        {
                            Id = 25,
                            Name = "MT"
                        },
                        new
                        {
                            Id = 26,
                            Name = "MX"
                        },
                        new
                        {
                            Id = 27,
                            Name = "NL"
                        },
                        new
                        {
                            Id = 28,
                            Name = "NO"
                        },
                        new
                        {
                            Id = 29,
                            Name = "NZ"
                        },
                        new
                        {
                            Id = 30,
                            Name = "PE"
                        },
                        new
                        {
                            Id = 31,
                            Name = "PL"
                        },
                        new
                        {
                            Id = 32,
                            Name = "PT"
                        },
                        new
                        {
                            Id = 33,
                            Name = "RO"
                        },
                        new
                        {
                            Id = 34,
                            Name = "RU"
                        },
                        new
                        {
                            Id = 35,
                            Name = "SE"
                        },
                        new
                        {
                            Id = 36,
                            Name = "SI"
                        },
                        new
                        {
                            Id = 37,
                            Name = "SK"
                        },
                        new
                        {
                            Id = 38,
                            Name = "US"
                        },
                        new
                        {
                            Id = 39,
                            Name = "ZA"
                        });
                });

            modelBuilder.Entity("titledbConverter.Models.Title", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApplicationId")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR");

                    b.Property<long>("NsuId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("TitleName")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.ToTable("Titles");
                });

            modelBuilder.Entity("titledbConverter.Models.Version", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("TitleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("VersionDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("VersionNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TitleId");

                    b.ToTable("Versions");
                });

            modelBuilder.Entity("RegionTitle", b =>
                {
                    b.HasOne("titledbConverter.Models.Region", null)
                        .WithMany()
                        .HasForeignKey("RegionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("titledbConverter.Models.Title", null)
                        .WithMany()
                        .HasForeignKey("TitlesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("titledbConverter.Models.Cnmt", b =>
                {
                    b.HasOne("titledbConverter.Models.Title", "Title")
                        .WithMany("Cnmts")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Title");
                });

            modelBuilder.Entity("titledbConverter.Models.Version", b =>
                {
                    b.HasOne("titledbConverter.Models.Title", "Title")
                        .WithMany("Versions")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Title");
                });

            modelBuilder.Entity("titledbConverter.Models.Title", b =>
                {
                    b.Navigation("Cnmts");

                    b.Navigation("Versions");
                });
#pragma warning restore 612, 618
        }
    }
}
